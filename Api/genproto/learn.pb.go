// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: learn.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Languages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LanguageId   string `protobuf:"bytes,1,opt,name=language_id,json=languageId,proto3" json:"language_id,omitempty"`
	LanguageCode string `protobuf:"bytes,2,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
	Name         string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	FlagEmoji    string `protobuf:"bytes,4,opt,name=flag_emoji,json=flagEmoji,proto3" json:"flag_emoji,omitempty"`
}

func (x *Languages) Reset() {
	*x = Languages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learn_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Languages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Languages) ProtoMessage() {}

func (x *Languages) ProtoReflect() protoreflect.Message {
	mi := &file_learn_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Languages.ProtoReflect.Descriptor instead.
func (*Languages) Descriptor() ([]byte, []int) {
	return file_learn_proto_rawDescGZIP(), []int{0}
}

func (x *Languages) GetLanguageId() string {
	if x != nil {
		return x.LanguageId
	}
	return ""
}

func (x *Languages) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *Languages) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Languages) GetFlagEmoji() string {
	if x != nil {
		return x.FlagEmoji
	}
	return ""
}

type Lessons struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId    string `protobuf:"bytes,1,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
	LessonTitle string `protobuf:"bytes,2,opt,name=lesson_title,json=lessonTitle,proto3" json:"lesson_title,omitempty"`
	Level       string `protobuf:"bytes,3,opt,name=level,proto3" json:"level,omitempty"`
	Completed   bool   `protobuf:"varint,4,opt,name=completed,proto3" json:"completed,omitempty"`
}

func (x *Lessons) Reset() {
	*x = Lessons{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learn_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lessons) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lessons) ProtoMessage() {}

func (x *Lessons) ProtoReflect() protoreflect.Message {
	mi := &file_learn_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lessons.ProtoReflect.Descriptor instead.
func (*Lessons) Descriptor() ([]byte, []int) {
	return file_learn_proto_rawDescGZIP(), []int{1}
}

func (x *Lessons) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

func (x *Lessons) GetLessonTitle() string {
	if x != nil {
		return x.LessonTitle
	}
	return ""
}

func (x *Lessons) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *Lessons) GetCompleted() bool {
	if x != nil {
		return x.Completed
	}
	return false
}

type EmptyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyReq) Reset() {
	*x = EmptyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learn_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyReq) ProtoMessage() {}

func (x *EmptyReq) ProtoReflect() protoreflect.Message {
	mi := &file_learn_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyReq.ProtoReflect.Descriptor instead.
func (*EmptyReq) Descriptor() ([]byte, []int) {
	return file_learn_proto_rawDescGZIP(), []int{2}
}

type GetAllLanguagesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Languages []*Languages `protobuf:"bytes,1,rep,name=languages,proto3" json:"languages,omitempty"`
}

func (x *GetAllLanguagesResp) Reset() {
	*x = GetAllLanguagesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learn_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllLanguagesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllLanguagesResp) ProtoMessage() {}

func (x *GetAllLanguagesResp) ProtoReflect() protoreflect.Message {
	mi := &file_learn_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllLanguagesResp.ProtoReflect.Descriptor instead.
func (*GetAllLanguagesResp) Descriptor() ([]byte, []int) {
	return file_learn_proto_rawDescGZIP(), []int{3}
}

func (x *GetAllLanguagesResp) GetLanguages() []*Languages {
	if x != nil {
		return x.Languages
	}
	return nil
}

type StartLearningReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Level    string `protobuf:"bytes,2,opt,name=level,proto3" json:"level,omitempty"`
	UserId   string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *StartLearningReq) Reset() {
	*x = StartLearningReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learn_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartLearningReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartLearningReq) ProtoMessage() {}

func (x *StartLearningReq) ProtoReflect() protoreflect.Message {
	mi := &file_learn_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartLearningReq.ProtoReflect.Descriptor instead.
func (*StartLearningReq) Descriptor() ([]byte, []int) {
	return file_learn_proto_rawDescGZIP(), []int{4}
}

func (x *StartLearningReq) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *StartLearningReq) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *StartLearningReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type StartLearningResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message    string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	LessonId   string   `protobuf:"bytes,2,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
	NextLesson *Lessons `protobuf:"bytes,3,opt,name=next_lesson,json=nextLesson,proto3" json:"next_lesson,omitempty"`
}

func (x *StartLearningResp) Reset() {
	*x = StartLearningResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learn_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartLearningResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartLearningResp) ProtoMessage() {}

func (x *StartLearningResp) ProtoReflect() protoreflect.Message {
	mi := &file_learn_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartLearningResp.ProtoReflect.Descriptor instead.
func (*StartLearningResp) Descriptor() ([]byte, []int) {
	return file_learn_proto_rawDescGZIP(), []int{5}
}

func (x *StartLearningResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *StartLearningResp) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

func (x *StartLearningResp) GetNextLesson() *Lessons {
	if x != nil {
		return x.NextLesson
	}
	return nil
}

type Content struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lessons *Lessons `protobuf:"bytes,1,opt,name=lessons,proto3" json:"lessons,omitempty"`
	Text    string   `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *Content) Reset() {
	*x = Content{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learn_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Content) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Content) ProtoMessage() {}

func (x *Content) ProtoReflect() protoreflect.Message {
	mi := &file_learn_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Content.ProtoReflect.Descriptor instead.
func (*Content) Descriptor() ([]byte, []int) {
	return file_learn_proto_rawDescGZIP(), []int{6}
}

func (x *Content) GetLessons() *Lessons {
	if x != nil {
		return x.Lessons
	}
	return nil
}

func (x *Content) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type Vocabulary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Word           string `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	Translation    string `protobuf:"bytes,2,opt,name=translation,proto3" json:"translation,omitempty"`
	ExampleLessons string `protobuf:"bytes,3,opt,name=example_lessons,json=exampleLessons,proto3" json:"example_lessons,omitempty"`
}

func (x *Vocabulary) Reset() {
	*x = Vocabulary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learn_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vocabulary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vocabulary) ProtoMessage() {}

func (x *Vocabulary) ProtoReflect() protoreflect.Message {
	mi := &file_learn_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vocabulary.ProtoReflect.Descriptor instead.
func (*Vocabulary) Descriptor() ([]byte, []int) {
	return file_learn_proto_rawDescGZIP(), []int{7}
}

func (x *Vocabulary) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *Vocabulary) GetTranslation() string {
	if x != nil {
		return x.Translation
	}
	return ""
}

func (x *Vocabulary) GetExampleLessons() string {
	if x != nil {
		return x.ExampleLessons
	}
	return ""
}

type ParticipateLessonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language   *Languages  `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Lesson     *Lessons    `protobuf:"bytes,2,opt,name=lesson,proto3" json:"lesson,omitempty"`
	Theme      string      `protobuf:"bytes,3,opt,name=theme,proto3" json:"theme,omitempty"`
	Vocabulary *Vocabulary `protobuf:"bytes,4,opt,name=vocabulary,proto3" json:"vocabulary,omitempty"`
}

func (x *ParticipateLessonResp) Reset() {
	*x = ParticipateLessonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learn_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParticipateLessonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParticipateLessonResp) ProtoMessage() {}

func (x *ParticipateLessonResp) ProtoReflect() protoreflect.Message {
	mi := &file_learn_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParticipateLessonResp.ProtoReflect.Descriptor instead.
func (*ParticipateLessonResp) Descriptor() ([]byte, []int) {
	return file_learn_proto_rawDescGZIP(), []int{8}
}

func (x *ParticipateLessonResp) GetLanguage() *Languages {
	if x != nil {
		return x.Language
	}
	return nil
}

func (x *ParticipateLessonResp) GetLesson() *Lessons {
	if x != nil {
		return x.Lesson
	}
	return nil
}

func (x *ParticipateLessonResp) GetTheme() string {
	if x != nil {
		return x.Theme
	}
	return ""
}

func (x *ParticipateLessonResp) GetVocabulary() *Vocabulary {
	if x != nil {
		return x.Vocabulary
	}
	return nil
}

type ParticipateLessonReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId string `protobuf:"bytes,1,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
}

func (x *ParticipateLessonReq) Reset() {
	*x = ParticipateLessonReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learn_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParticipateLessonReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParticipateLessonReq) ProtoMessage() {}

func (x *ParticipateLessonReq) ProtoReflect() protoreflect.Message {
	mi := &file_learn_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParticipateLessonReq.ProtoReflect.Descriptor instead.
func (*ParticipateLessonReq) Descriptor() ([]byte, []int) {
	return file_learn_proto_rawDescGZIP(), []int{9}
}

func (x *ParticipateLessonReq) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

type CompleteLessonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text       string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	ExpEarned  int64    `protobuf:"varint,2,opt,name=exp_earned,json=expEarned,proto3" json:"exp_earned,omitempty"`
	NextLesson *Lessons `protobuf:"bytes,3,opt,name=next_lesson,json=nextLesson,proto3" json:"next_lesson,omitempty"`
}

func (x *CompleteLessonResp) Reset() {
	*x = CompleteLessonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learn_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteLessonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteLessonResp) ProtoMessage() {}

func (x *CompleteLessonResp) ProtoReflect() protoreflect.Message {
	mi := &file_learn_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteLessonResp.ProtoReflect.Descriptor instead.
func (*CompleteLessonResp) Descriptor() ([]byte, []int) {
	return file_learn_proto_rawDescGZIP(), []int{10}
}

func (x *CompleteLessonResp) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *CompleteLessonResp) GetExpEarned() int64 {
	if x != nil {
		return x.ExpEarned
	}
	return 0
}

func (x *CompleteLessonResp) GetNextLesson() *Lessons {
	if x != nil {
		return x.NextLesson
	}
	return nil
}

type CompleteLessonReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId string `protobuf:"bytes,1,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
}

func (x *CompleteLessonReq) Reset() {
	*x = CompleteLessonReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learn_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteLessonReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteLessonReq) ProtoMessage() {}

func (x *CompleteLessonReq) ProtoReflect() protoreflect.Message {
	mi := &file_learn_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteLessonReq.ProtoReflect.Descriptor instead.
func (*CompleteLessonReq) Descriptor() ([]byte, []int) {
	return file_learn_proto_rawDescGZIP(), []int{11}
}

func (x *CompleteLessonReq) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

type Exercise struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExerciseId    string `protobuf:"bytes,1,opt,name=exercise_id,json=exerciseId,proto3" json:"exercise_id,omitempty"`
	Type          string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Questions     string `protobuf:"bytes,3,opt,name=questions,proto3" json:"questions,omitempty"`
	CorrectAnswer string `protobuf:"bytes,4,opt,name=correct_answer,json=correctAnswer,proto3" json:"correct_answer,omitempty"`
}

func (x *Exercise) Reset() {
	*x = Exercise{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learn_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Exercise) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Exercise) ProtoMessage() {}

func (x *Exercise) ProtoReflect() protoreflect.Message {
	mi := &file_learn_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Exercise.ProtoReflect.Descriptor instead.
func (*Exercise) Descriptor() ([]byte, []int) {
	return file_learn_proto_rawDescGZIP(), []int{12}
}

func (x *Exercise) GetExerciseId() string {
	if x != nil {
		return x.ExerciseId
	}
	return ""
}

func (x *Exercise) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Exercise) GetQuestions() string {
	if x != nil {
		return x.Questions
	}
	return ""
}

func (x *Exercise) GetCorrectAnswer() string {
	if x != nil {
		return x.CorrectAnswer
	}
	return ""
}

type StartExerciceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExerciseId string `protobuf:"bytes,1,opt,name=exercise_id,json=exerciseId,proto3" json:"exercise_id,omitempty"`
}

func (x *StartExerciceReq) Reset() {
	*x = StartExerciceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learn_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartExerciceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartExerciceReq) ProtoMessage() {}

func (x *StartExerciceReq) ProtoReflect() protoreflect.Message {
	mi := &file_learn_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartExerciceReq.ProtoReflect.Descriptor instead.
func (*StartExerciceReq) Descriptor() ([]byte, []int) {
	return file_learn_proto_rawDescGZIP(), []int{13}
}

func (x *StartExerciceReq) GetExerciseId() string {
	if x != nil {
		return x.ExerciseId
	}
	return ""
}

type StartExerciceResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language *Languages `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Lesson   *Lessons   `protobuf:"bytes,2,opt,name=lesson,proto3" json:"lesson,omitempty"`
	Exercise *Exercise  `protobuf:"bytes,3,opt,name=exercise,proto3" json:"exercise,omitempty"`
}

func (x *StartExerciceResp) Reset() {
	*x = StartExerciceResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learn_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartExerciceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartExerciceResp) ProtoMessage() {}

func (x *StartExerciceResp) ProtoReflect() protoreflect.Message {
	mi := &file_learn_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartExerciceResp.ProtoReflect.Descriptor instead.
func (*StartExerciceResp) Descriptor() ([]byte, []int) {
	return file_learn_proto_rawDescGZIP(), []int{14}
}

func (x *StartExerciceResp) GetLanguage() *Languages {
	if x != nil {
		return x.Language
	}
	return nil
}

func (x *StartExerciceResp) GetLesson() *Lessons {
	if x != nil {
		return x.Lesson
	}
	return nil
}

func (x *StartExerciceResp) GetExercise() *Exercise {
	if x != nil {
		return x.Exercise
	}
	return nil
}

type AnswerExerciseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExerciseId string `protobuf:"bytes,1,opt,name=exercise_id,json=exerciseId,proto3" json:"exercise_id,omitempty"`
	Answer     string `protobuf:"bytes,2,opt,name=answer,proto3" json:"answer,omitempty"`
}

func (x *AnswerExerciseReq) Reset() {
	*x = AnswerExerciseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learn_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnswerExerciseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerExerciseReq) ProtoMessage() {}

func (x *AnswerExerciseReq) ProtoReflect() protoreflect.Message {
	mi := &file_learn_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerExerciseReq.ProtoReflect.Descriptor instead.
func (*AnswerExerciseReq) Descriptor() ([]byte, []int) {
	return file_learn_proto_rawDescGZIP(), []int{15}
}

func (x *AnswerExerciseReq) GetExerciseId() string {
	if x != nil {
		return x.ExerciseId
	}
	return ""
}

func (x *AnswerExerciseReq) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

type AnswerExerciseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsCorrect bool   `protobuf:"varint,1,opt,name=isCorrect,proto3" json:"isCorrect,omitempty"`
	Answer    string `protobuf:"bytes,2,opt,name=answer,proto3" json:"answer,omitempty"`
	EarnedExp int64  `protobuf:"varint,3,opt,name=earned_exp,json=earnedExp,proto3" json:"earned_exp,omitempty"`
}

func (x *AnswerExerciseResp) Reset() {
	*x = AnswerExerciseResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learn_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnswerExerciseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerExerciseResp) ProtoMessage() {}

func (x *AnswerExerciseResp) ProtoReflect() protoreflect.Message {
	mi := &file_learn_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerExerciseResp.ProtoReflect.Descriptor instead.
func (*AnswerExerciseResp) Descriptor() ([]byte, []int) {
	return file_learn_proto_rawDescGZIP(), []int{16}
}

func (x *AnswerExerciseResp) GetIsCorrect() bool {
	if x != nil {
		return x.IsCorrect
	}
	return false
}

func (x *AnswerExerciseResp) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

func (x *AnswerExerciseResp) GetEarnedExp() int64 {
	if x != nil {
		return x.EarnedExp
	}
	return 0
}

type GetAllVocabularyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LanguageId string `protobuf:"bytes,1,opt,name=language_id,json=languageId,proto3" json:"language_id,omitempty"`
}

func (x *GetAllVocabularyReq) Reset() {
	*x = GetAllVocabularyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learn_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllVocabularyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllVocabularyReq) ProtoMessage() {}

func (x *GetAllVocabularyReq) ProtoReflect() protoreflect.Message {
	mi := &file_learn_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllVocabularyReq.ProtoReflect.Descriptor instead.
func (*GetAllVocabularyReq) Descriptor() ([]byte, []int) {
	return file_learn_proto_rawDescGZIP(), []int{17}
}

func (x *GetAllVocabularyReq) GetLanguageId() string {
	if x != nil {
		return x.LanguageId
	}
	return ""
}

type GetAllVocabularyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language   *Languages  `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Vocabulary *Vocabulary `protobuf:"bytes,2,opt,name=vocabulary,proto3" json:"vocabulary,omitempty"`
}

func (x *GetAllVocabularyResp) Reset() {
	*x = GetAllVocabularyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learn_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllVocabularyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllVocabularyResp) ProtoMessage() {}

func (x *GetAllVocabularyResp) ProtoReflect() protoreflect.Message {
	mi := &file_learn_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllVocabularyResp.ProtoReflect.Descriptor instead.
func (*GetAllVocabularyResp) Descriptor() ([]byte, []int) {
	return file_learn_proto_rawDescGZIP(), []int{18}
}

func (x *GetAllVocabularyResp) GetLanguage() *Languages {
	if x != nil {
		return x.Language
	}
	return nil
}

func (x *GetAllVocabularyResp) GetVocabulary() *Vocabulary {
	if x != nil {
		return x.Vocabulary
	}
	return nil
}

type AddNewWordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vocabulary *Vocabulary `protobuf:"bytes,1,opt,name=vocabulary,proto3" json:"vocabulary,omitempty"`
}

func (x *AddNewWordReq) Reset() {
	*x = AddNewWordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learn_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNewWordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNewWordReq) ProtoMessage() {}

func (x *AddNewWordReq) ProtoReflect() protoreflect.Message {
	mi := &file_learn_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNewWordReq.ProtoReflect.Descriptor instead.
func (*AddNewWordReq) Descriptor() ([]byte, []int) {
	return file_learn_proto_rawDescGZIP(), []int{19}
}

func (x *AddNewWordReq) GetVocabulary() *Vocabulary {
	if x != nil {
		return x.Vocabulary
	}
	return nil
}

type AddNewWordResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LanguageId string `protobuf:"bytes,1,opt,name=language_id,json=languageId,proto3" json:"language_id,omitempty"`
	Message    string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	WordId     string `protobuf:"bytes,3,opt,name=word_id,json=wordId,proto3" json:"word_id,omitempty"`
}

func (x *AddNewWordResp) Reset() {
	*x = AddNewWordResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_learn_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNewWordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNewWordResp) ProtoMessage() {}

func (x *AddNewWordResp) ProtoReflect() protoreflect.Message {
	mi := &file_learn_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNewWordResp.ProtoReflect.Descriptor instead.
func (*AddNewWordResp) Descriptor() ([]byte, []int) {
	return file_learn_proto_rawDescGZIP(), []int{20}
}

func (x *AddNewWordResp) GetLanguageId() string {
	if x != nil {
		return x.LanguageId
	}
	return ""
}

func (x *AddNewWordResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AddNewWordResp) GetWordId() string {
	if x != nil {
		return x.WordId
	}
	return ""
}

var File_learn_proto protoreflect.FileDescriptor

var file_learn_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6c,
	0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x22, 0x84, 0x01, 0x0a, 0x09, 0x4c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x66, 0x6c, 0x61, 0x67, 0x5f, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x6c, 0x61, 0x67, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x22, 0x7d,
	0x0a, 0x07, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x0a, 0x0a,
	0x08, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x22, 0x48, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x31, 0x0a, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x52, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x73, 0x22, 0x5d, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x65, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x7e, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x65, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x32,
	0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x22, 0x4a, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a,
	0x07, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x73, 0x52, 0x07, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x6b,
	0x0a, 0x0a, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x6c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x22, 0xbf, 0x01, 0x0a, 0x15,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x52, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x52, 0x06, 0x6c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x76, 0x6f, 0x63, 0x61, 0x62,
	0x75, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x65,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72,
	0x79, 0x52, 0x0a, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x22, 0x33, 0x0a,
	0x14, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x7b, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x65, 0x78, 0x70, 0x5f, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x65, 0x78, 0x70, 0x45, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x0b, 0x6e,
	0x65, 0x78, 0x74, 0x5f, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x73, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x22,
	0x30, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x84, 0x01, 0x0a, 0x08, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x61, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65,
	0x63, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x33, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b,
	0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x49, 0x64, 0x22, 0x9f, 0x01,
	0x0a, 0x11, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x52, 0x06, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x12,
	0x2e, 0x0a, 0x08, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x78, 0x65,
	0x72, 0x63, 0x69, 0x73, 0x65, 0x52, 0x08, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x22,
	0x4c, 0x0a, 0x11, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x65, 0x72, 0x63,
	0x69, 0x73, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x69, 0x0a,
	0x12, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x61, 0x72,
	0x6e, 0x65, 0x64, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65,
	0x61, 0x72, 0x6e, 0x65, 0x64, 0x45, 0x78, 0x70, 0x22, 0x36, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12,
	0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x22, 0x7d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75,
	0x6c, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x65, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x52,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x76, 0x6f, 0x63,
	0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c,
	0x61, 0x72, 0x79, 0x52, 0x0a, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x22,
	0x45, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x4e, 0x65, 0x77, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x34, 0x0a, 0x0a, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e,
	0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x52, 0x0a, 0x76, 0x6f, 0x63, 0x61,
	0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x22, 0x64, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x4e, 0x65, 0x77,
	0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x32, 0xf3, 0x04, 0x0a,
	0x0f, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x44, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x12, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x15, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4c,
	0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12,
	0x1a, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x6c, 0x65,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x65, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x2e, 0x6c, 0x65, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x65,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x6c, 0x65, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x65,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x0e, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x12, 0x1b, 0x2e, 0x6c,
	0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x6c, 0x65, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x12, 0x1a, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x4b, 0x0a, 0x0e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x45, 0x78, 0x65, 0x72, 0x63,
	0x69, 0x73, 0x65, 0x12, 0x1b, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x1c, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61,
	0x72, 0x79, 0x12, 0x1d, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x1a, 0x1e, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x3f, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x4e, 0x65, 0x77, 0x57, 0x6f, 0x72, 0x64, 0x12,
	0x17, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x64, 0x64, 0x4e, 0x65,
	0x77, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x41, 0x64, 0x64, 0x4e, 0x65, 0x77, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x42, 0x03, 0x5a, 0x01, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_learn_proto_rawDescOnce sync.Once
	file_learn_proto_rawDescData = file_learn_proto_rawDesc
)

func file_learn_proto_rawDescGZIP() []byte {
	file_learn_proto_rawDescOnce.Do(func() {
		file_learn_proto_rawDescData = protoimpl.X.CompressGZIP(file_learn_proto_rawDescData)
	})
	return file_learn_proto_rawDescData
}

var file_learn_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_learn_proto_goTypes = []any{
	(*Languages)(nil),             // 0: learning.Languages
	(*Lessons)(nil),               // 1: learning.Lessons
	(*EmptyReq)(nil),              // 2: learning.EmptyReq
	(*GetAllLanguagesResp)(nil),   // 3: learning.GetAllLanguagesResp
	(*StartLearningReq)(nil),      // 4: learning.StartLearningReq
	(*StartLearningResp)(nil),     // 5: learning.StartLearningResp
	(*Content)(nil),               // 6: learning.Content
	(*Vocabulary)(nil),            // 7: learning.Vocabulary
	(*ParticipateLessonResp)(nil), // 8: learning.ParticipateLessonResp
	(*ParticipateLessonReq)(nil),  // 9: learning.ParticipateLessonReq
	(*CompleteLessonResp)(nil),    // 10: learning.CompleteLessonResp
	(*CompleteLessonReq)(nil),     // 11: learning.CompleteLessonReq
	(*Exercise)(nil),              // 12: learning.Exercise
	(*StartExerciceReq)(nil),      // 13: learning.StartExerciceReq
	(*StartExerciceResp)(nil),     // 14: learning.StartExerciceResp
	(*AnswerExerciseReq)(nil),     // 15: learning.AnswerExerciseReq
	(*AnswerExerciseResp)(nil),    // 16: learning.AnswerExerciseResp
	(*GetAllVocabularyReq)(nil),   // 17: learning.GetAllVocabularyReq
	(*GetAllVocabularyResp)(nil),  // 18: learning.GetAllVocabularyResp
	(*AddNewWordReq)(nil),         // 19: learning.AddNewWordReq
	(*AddNewWordResp)(nil),        // 20: learning.AddNewWordResp
}
var file_learn_proto_depIdxs = []int32{
	0,  // 0: learning.GetAllLanguagesResp.languages:type_name -> learning.Languages
	1,  // 1: learning.StartLearningResp.next_lesson:type_name -> learning.Lessons
	1,  // 2: learning.Content.lessons:type_name -> learning.Lessons
	0,  // 3: learning.ParticipateLessonResp.language:type_name -> learning.Languages
	1,  // 4: learning.ParticipateLessonResp.lesson:type_name -> learning.Lessons
	7,  // 5: learning.ParticipateLessonResp.vocabulary:type_name -> learning.Vocabulary
	1,  // 6: learning.CompleteLessonResp.next_lesson:type_name -> learning.Lessons
	0,  // 7: learning.StartExerciceResp.language:type_name -> learning.Languages
	1,  // 8: learning.StartExerciceResp.lesson:type_name -> learning.Lessons
	12, // 9: learning.StartExerciceResp.exercise:type_name -> learning.Exercise
	0,  // 10: learning.GetAllVocabularyResp.language:type_name -> learning.Languages
	7,  // 11: learning.GetAllVocabularyResp.vocabulary:type_name -> learning.Vocabulary
	7,  // 12: learning.AddNewWordReq.vocabulary:type_name -> learning.Vocabulary
	2,  // 13: learning.LearningService.GetAllLanguages:input_type -> learning.EmptyReq
	4,  // 14: learning.LearningService.StartLearningLanguage:input_type -> learning.StartLearningReq
	9,  // 15: learning.LearningService.GetLessonInfo:input_type -> learning.ParticipateLessonReq
	11, // 16: learning.LearningService.CompleteLesson:input_type -> learning.CompleteLessonReq
	13, // 17: learning.LearningService.StartExercise:input_type -> learning.StartExerciceReq
	15, // 18: learning.LearningService.AnswerExercise:input_type -> learning.AnswerExerciseReq
	17, // 19: learning.LearningService.GetAllVocabulary:input_type -> learning.GetAllVocabularyReq
	19, // 20: learning.LearningService.AddNewWord:input_type -> learning.AddNewWordReq
	3,  // 21: learning.LearningService.GetAllLanguages:output_type -> learning.GetAllLanguagesResp
	5,  // 22: learning.LearningService.StartLearningLanguage:output_type -> learning.StartLearningResp
	8,  // 23: learning.LearningService.GetLessonInfo:output_type -> learning.ParticipateLessonResp
	10, // 24: learning.LearningService.CompleteLesson:output_type -> learning.CompleteLessonResp
	14, // 25: learning.LearningService.StartExercise:output_type -> learning.StartExerciceResp
	16, // 26: learning.LearningService.AnswerExercise:output_type -> learning.AnswerExerciseResp
	18, // 27: learning.LearningService.GetAllVocabulary:output_type -> learning.GetAllVocabularyResp
	20, // 28: learning.LearningService.AddNewWord:output_type -> learning.AddNewWordResp
	21, // [21:29] is the sub-list for method output_type
	13, // [13:21] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_learn_proto_init() }
func file_learn_proto_init() {
	if File_learn_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_learn_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Languages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learn_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Lessons); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learn_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*EmptyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learn_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllLanguagesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learn_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*StartLearningReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learn_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*StartLearningResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learn_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*Content); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learn_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*Vocabulary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learn_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ParticipateLessonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learn_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ParticipateLessonReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learn_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*CompleteLessonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learn_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*CompleteLessonReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learn_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*Exercise); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learn_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*StartExerciceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learn_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*StartExerciceResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learn_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*AnswerExerciseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learn_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*AnswerExerciseResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learn_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllVocabularyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learn_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllVocabularyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learn_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*AddNewWordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_learn_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*AddNewWordResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_learn_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_learn_proto_goTypes,
		DependencyIndexes: file_learn_proto_depIdxs,
		MessageInfos:      file_learn_proto_msgTypes,
	}.Build()
	File_learn_proto = out.File
	file_learn_proto_rawDesc = nil
	file_learn_proto_goTypes = nil
	file_learn_proto_depIdxs = nil
}
