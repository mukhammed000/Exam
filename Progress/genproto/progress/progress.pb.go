// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: progress.proto

package progress

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProgressByLanguageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LanguageId string `protobuf:"bytes,1,opt,name=language_id,json=languageId,proto3" json:"language_id,omitempty"`
}

func (x *ProgressByLanguageRequest) Reset() {
	*x = ProgressByLanguageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progress_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProgressByLanguageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgressByLanguageRequest) ProtoMessage() {}

func (x *ProgressByLanguageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_progress_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgressByLanguageRequest.ProtoReflect.Descriptor instead.
func (*ProgressByLanguageRequest) Descriptor() ([]byte, []int) {
	return file_progress_proto_rawDescGZIP(), []int{0}
}

func (x *ProgressByLanguageRequest) GetLanguageId() string {
	if x != nil {
		return x.LanguageId
	}
	return ""
}

type ProgressByLanguageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LanguageId string `protobuf:"bytes,1,opt,name=language_id,json=languageId,proto3" json:"language_id,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ProgressByLanguageReq) Reset() {
	*x = ProgressByLanguageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progress_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProgressByLanguageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgressByLanguageReq) ProtoMessage() {}

func (x *ProgressByLanguageReq) ProtoReflect() protoreflect.Message {
	mi := &file_progress_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgressByLanguageReq.ProtoReflect.Descriptor instead.
func (*ProgressByLanguageReq) Descriptor() ([]byte, []int) {
	return file_progress_proto_rawDescGZIP(), []int{1}
}

func (x *ProgressByLanguageReq) GetLanguageId() string {
	if x != nil {
		return x.LanguageId
	}
	return ""
}

func (x *ProgressByLanguageReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ProgressByLanguageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language               string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Level                  string `protobuf:"bytes,2,opt,name=level,proto3" json:"level,omitempty"`
	Xp                     int64  `protobuf:"varint,3,opt,name=xp,proto3" json:"xp,omitempty"`
	LessonsCompleted       int64  `protobuf:"varint,4,opt,name=lessons_completed,json=lessonsCompleted,proto3" json:"lessons_completed,omitempty"`
	VocabularyLearned      int64  `protobuf:"varint,5,opt,name=vocabulary_learned,json=vocabularyLearned,proto3" json:"vocabulary_learned,omitempty"`
	GrammarRulesMastered   int64  `protobuf:"varint,6,opt,name=grammar_rules_mastered,json=grammarRulesMastered,proto3" json:"grammar_rules_mastered,omitempty"`
	ListeningComprehension int64  `protobuf:"varint,7,opt,name=listening_comprehension,json=listeningComprehension,proto3" json:"listening_comprehension,omitempty"`
	SpeakingFluency        int64  `protobuf:"varint,8,opt,name=speaking_fluency,json=speakingFluency,proto3" json:"speaking_fluency,omitempty"`
}

func (x *ProgressByLanguageResponse) Reset() {
	*x = ProgressByLanguageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progress_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProgressByLanguageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgressByLanguageResponse) ProtoMessage() {}

func (x *ProgressByLanguageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_progress_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgressByLanguageResponse.ProtoReflect.Descriptor instead.
func (*ProgressByLanguageResponse) Descriptor() ([]byte, []int) {
	return file_progress_proto_rawDescGZIP(), []int{2}
}

func (x *ProgressByLanguageResponse) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *ProgressByLanguageResponse) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *ProgressByLanguageResponse) GetXp() int64 {
	if x != nil {
		return x.Xp
	}
	return 0
}

func (x *ProgressByLanguageResponse) GetLessonsCompleted() int64 {
	if x != nil {
		return x.LessonsCompleted
	}
	return 0
}

func (x *ProgressByLanguageResponse) GetVocabularyLearned() int64 {
	if x != nil {
		return x.VocabularyLearned
	}
	return 0
}

func (x *ProgressByLanguageResponse) GetGrammarRulesMastered() int64 {
	if x != nil {
		return x.GrammarRulesMastered
	}
	return 0
}

func (x *ProgressByLanguageResponse) GetListeningComprehension() int64 {
	if x != nil {
		return x.ListeningComprehension
	}
	return 0
}

func (x *ProgressByLanguageResponse) GetSpeakingFluency() int64 {
	if x != nil {
		return x.SpeakingFluency
	}
	return 0
}

type DailyProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date             string `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	XpEarned         int64  `protobuf:"varint,2,opt,name=xp_earned,json=xpEarned,proto3" json:"xp_earned,omitempty"`
	LessonsCompleted int64  `protobuf:"varint,3,opt,name=lessons_completed,json=lessonsCompleted,proto3" json:"lessons_completed,omitempty"`
	NewWordsLearned  int64  `protobuf:"varint,4,opt,name=new_words_learned,json=newWordsLearned,proto3" json:"new_words_learned,omitempty"`
	MinutesPracticed int64  `protobuf:"varint,5,opt,name=minutes_practiced,json=minutesPracticed,proto3" json:"minutes_practiced,omitempty"`
	StreakDays       int64  `protobuf:"varint,6,opt,name=streak_days,json=streakDays,proto3" json:"streak_days,omitempty"`
}

func (x *DailyProgressResponse) Reset() {
	*x = DailyProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progress_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyProgressResponse) ProtoMessage() {}

func (x *DailyProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_progress_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyProgressResponse.ProtoReflect.Descriptor instead.
func (*DailyProgressResponse) Descriptor() ([]byte, []int) {
	return file_progress_proto_rawDescGZIP(), []int{3}
}

func (x *DailyProgressResponse) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *DailyProgressResponse) GetXpEarned() int64 {
	if x != nil {
		return x.XpEarned
	}
	return 0
}

func (x *DailyProgressResponse) GetLessonsCompleted() int64 {
	if x != nil {
		return x.LessonsCompleted
	}
	return 0
}

func (x *DailyProgressResponse) GetNewWordsLearned() int64 {
	if x != nil {
		return x.NewWordsLearned
	}
	return 0
}

func (x *DailyProgressResponse) GetMinutesPracticed() int64 {
	if x != nil {
		return x.MinutesPracticed
	}
	return 0
}

func (x *DailyProgressResponse) GetStreakDays() int64 {
	if x != nil {
		return x.StreakDays
	}
	return 0
}

type WeeklyProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WeekStart             string `protobuf:"bytes,1,opt,name=week_start,json=weekStart,proto3" json:"week_start,omitempty"`
	WeekEnd               string `protobuf:"bytes,2,opt,name=week_end,json=weekEnd,proto3" json:"week_end,omitempty"`
	TotalXpEarned         int64  `protobuf:"varint,3,opt,name=total_xp_earned,json=totalXpEarned,proto3" json:"total_xp_earned,omitempty"`
	LessonsCompleted      int64  `protobuf:"varint,4,opt,name=lessons_completed,json=lessonsCompleted,proto3" json:"lessons_completed,omitempty"`
	NewWordsLearned       int64  `protobuf:"varint,5,opt,name=new_words_learned,json=newWordsLearned,proto3" json:"new_words_learned,omitempty"`
	TotalMinutesPracticed int64  `protobuf:"varint,6,opt,name=total_minutes_practiced,json=totalMinutesPracticed,proto3" json:"total_minutes_practiced,omitempty"`
	MostActiveDay         string `protobuf:"bytes,7,opt,name=most_active_day,json=mostActiveDay,proto3" json:"most_active_day,omitempty"`
}

func (x *WeeklyProgressResponse) Reset() {
	*x = WeeklyProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progress_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeeklyProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeeklyProgressResponse) ProtoMessage() {}

func (x *WeeklyProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_progress_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeeklyProgressResponse.ProtoReflect.Descriptor instead.
func (*WeeklyProgressResponse) Descriptor() ([]byte, []int) {
	return file_progress_proto_rawDescGZIP(), []int{4}
}

func (x *WeeklyProgressResponse) GetWeekStart() string {
	if x != nil {
		return x.WeekStart
	}
	return ""
}

func (x *WeeklyProgressResponse) GetWeekEnd() string {
	if x != nil {
		return x.WeekEnd
	}
	return ""
}

func (x *WeeklyProgressResponse) GetTotalXpEarned() int64 {
	if x != nil {
		return x.TotalXpEarned
	}
	return 0
}

func (x *WeeklyProgressResponse) GetLessonsCompleted() int64 {
	if x != nil {
		return x.LessonsCompleted
	}
	return 0
}

func (x *WeeklyProgressResponse) GetNewWordsLearned() int64 {
	if x != nil {
		return x.NewWordsLearned
	}
	return 0
}

func (x *WeeklyProgressResponse) GetTotalMinutesPracticed() int64 {
	if x != nil {
		return x.TotalMinutesPracticed
	}
	return 0
}

func (x *WeeklyProgressResponse) GetMostActiveDay() string {
	if x != nil {
		return x.MostActiveDay
	}
	return ""
}

type MonthlyProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Month                 string `protobuf:"bytes,1,opt,name=month,proto3" json:"month,omitempty"`
	TotalXpEarned         int64  `protobuf:"varint,2,opt,name=total_xp_earned,json=totalXpEarned,proto3" json:"total_xp_earned,omitempty"`
	LessonsCompleted      int64  `protobuf:"varint,3,opt,name=lessons_completed,json=lessonsCompleted,proto3" json:"lessons_completed,omitempty"`
	NewWordsLearned       int64  `protobuf:"varint,4,opt,name=new_words_learned,json=newWordsLearned,proto3" json:"new_words_learned,omitempty"`
	TotalMinutesPracticed int64  `protobuf:"varint,5,opt,name=total_minutes_practiced,json=totalMinutesPracticed,proto3" json:"total_minutes_practiced,omitempty"`
	MostImprovedSkill     string `protobuf:"bytes,6,opt,name=most_improved_skill,json=mostImprovedSkill,proto3" json:"most_improved_skill,omitempty"`
}

func (x *MonthlyProgressResponse) Reset() {
	*x = MonthlyProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progress_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonthlyProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonthlyProgressResponse) ProtoMessage() {}

func (x *MonthlyProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_progress_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonthlyProgressResponse.ProtoReflect.Descriptor instead.
func (*MonthlyProgressResponse) Descriptor() ([]byte, []int) {
	return file_progress_proto_rawDescGZIP(), []int{5}
}

func (x *MonthlyProgressResponse) GetMonth() string {
	if x != nil {
		return x.Month
	}
	return ""
}

func (x *MonthlyProgressResponse) GetTotalXpEarned() int64 {
	if x != nil {
		return x.TotalXpEarned
	}
	return 0
}

func (x *MonthlyProgressResponse) GetLessonsCompleted() int64 {
	if x != nil {
		return x.LessonsCompleted
	}
	return 0
}

func (x *MonthlyProgressResponse) GetNewWordsLearned() int64 {
	if x != nil {
		return x.NewWordsLearned
	}
	return 0
}

func (x *MonthlyProgressResponse) GetTotalMinutesPracticed() int64 {
	if x != nil {
		return x.TotalMinutesPracticed
	}
	return 0
}

func (x *MonthlyProgressResponse) GetMostImprovedSkill() string {
	if x != nil {
		return x.MostImprovedSkill
	}
	return ""
}

type Achievement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	EarnedAt    string `protobuf:"bytes,4,opt,name=earned_at,json=earnedAt,proto3" json:"earned_at,omitempty"`
}

func (x *Achievement) Reset() {
	*x = Achievement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progress_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Achievement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Achievement) ProtoMessage() {}

func (x *Achievement) ProtoReflect() protoreflect.Message {
	mi := &file_progress_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Achievement.ProtoReflect.Descriptor instead.
func (*Achievement) Descriptor() ([]byte, []int) {
	return file_progress_proto_rawDescGZIP(), []int{6}
}

func (x *Achievement) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Achievement) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Achievement) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Achievement) GetEarnedAt() string {
	if x != nil {
		return x.EarnedAt
	}
	return ""
}

type AchievementsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Achievements []*Achievement `protobuf:"bytes,1,rep,name=achievements,proto3" json:"achievements,omitempty"`
}

func (x *AchievementsResponse) Reset() {
	*x = AchievementsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progress_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AchievementsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AchievementsResponse) ProtoMessage() {}

func (x *AchievementsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_progress_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AchievementsResponse.ProtoReflect.Descriptor instead.
func (*AchievementsResponse) Descriptor() ([]byte, []int) {
	return file_progress_proto_rawDescGZIP(), []int{7}
}

func (x *AchievementsResponse) GetAchievements() []*Achievement {
	if x != nil {
		return x.Achievements
	}
	return nil
}

type LeaderboardEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rank     int64  `protobuf:"varint,1,opt,name=rank,proto3" json:"rank,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Xp       int64  `protobuf:"varint,3,opt,name=xp,proto3" json:"xp,omitempty"`
	Level    string `protobuf:"bytes,4,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *LeaderboardEntry) Reset() {
	*x = LeaderboardEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progress_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaderboardEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderboardEntry) ProtoMessage() {}

func (x *LeaderboardEntry) ProtoReflect() protoreflect.Message {
	mi := &file_progress_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderboardEntry.ProtoReflect.Descriptor instead.
func (*LeaderboardEntry) Descriptor() ([]byte, []int) {
	return file_progress_proto_rawDescGZIP(), []int{8}
}

func (x *LeaderboardEntry) GetRank() int64 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *LeaderboardEntry) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LeaderboardEntry) GetXp() int64 {
	if x != nil {
		return x.Xp
	}
	return 0
}

func (x *LeaderboardEntry) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

type LeaderboardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language    string              `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Leaderboard []*LeaderboardEntry `protobuf:"bytes,2,rep,name=leaderboard,proto3" json:"leaderboard,omitempty"`
	UserRank    int64               `protobuf:"varint,3,opt,name=user_rank,json=userRank,proto3" json:"user_rank,omitempty"`
}

func (x *LeaderboardResponse) Reset() {
	*x = LeaderboardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progress_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaderboardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderboardResponse) ProtoMessage() {}

func (x *LeaderboardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_progress_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderboardResponse.ProtoReflect.Descriptor instead.
func (*LeaderboardResponse) Descriptor() ([]byte, []int) {
	return file_progress_proto_rawDescGZIP(), []int{9}
}

func (x *LeaderboardResponse) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *LeaderboardResponse) GetLeaderboard() []*LeaderboardEntry {
	if x != nil {
		return x.Leaderboard
	}
	return nil
}

func (x *LeaderboardResponse) GetUserRank() int64 {
	if x != nil {
		return x.UserRank
	}
	return 0
}

type Skill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Level               int64  `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
	ProgressToNextLevel int64  `protobuf:"varint,3,opt,name=progress_to_next_level,json=progressToNextLevel,proto3" json:"progress_to_next_level,omitempty"`
	WordsLearned        int64  `protobuf:"varint,4,opt,name=words_learned,json=wordsLearned,proto3" json:"words_learned,omitempty"`
	RulesMastered       int64  `protobuf:"varint,5,opt,name=rules_mastered,json=rulesMastered,proto3" json:"rules_mastered,omitempty"`
	ComprehensionRate   int64  `protobuf:"varint,6,opt,name=comprehension_rate,json=comprehensionRate,proto3" json:"comprehension_rate,omitempty"`
	FluencyRate         int64  `protobuf:"varint,7,opt,name=fluency_rate,json=fluencyRate,proto3" json:"fluency_rate,omitempty"`
}

func (x *Skill) Reset() {
	*x = Skill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progress_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Skill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Skill) ProtoMessage() {}

func (x *Skill) ProtoReflect() protoreflect.Message {
	mi := &file_progress_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Skill.ProtoReflect.Descriptor instead.
func (*Skill) Descriptor() ([]byte, []int) {
	return file_progress_proto_rawDescGZIP(), []int{10}
}

func (x *Skill) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Skill) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Skill) GetProgressToNextLevel() int64 {
	if x != nil {
		return x.ProgressToNextLevel
	}
	return 0
}

func (x *Skill) GetWordsLearned() int64 {
	if x != nil {
		return x.WordsLearned
	}
	return 0
}

func (x *Skill) GetRulesMastered() int64 {
	if x != nil {
		return x.RulesMastered
	}
	return 0
}

func (x *Skill) GetComprehensionRate() int64 {
	if x != nil {
		return x.ComprehensionRate
	}
	return 0
}

func (x *Skill) GetFluencyRate() int64 {
	if x != nil {
		return x.FluencyRate
	}
	return 0
}

type SkillsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string   `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Skills   []*Skill `protobuf:"bytes,2,rep,name=skills,proto3" json:"skills,omitempty"`
}

func (x *SkillsResponse) Reset() {
	*x = SkillsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progress_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkillsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkillsResponse) ProtoMessage() {}

func (x *SkillsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_progress_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkillsResponse.ProtoReflect.Descriptor instead.
func (*SkillsResponse) Descriptor() ([]byte, []int) {
	return file_progress_proto_rawDescGZIP(), []int{11}
}

func (x *SkillsResponse) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *SkillsResponse) GetSkills() []*Skill {
	if x != nil {
		return x.Skills
	}
	return nil
}

type UserId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UserId) Reset() {
	*x = UserId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progress_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserId) ProtoMessage() {}

func (x *UserId) ProtoReflect() protoreflect.Message {
	mi := &file_progress_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserId.ProtoReflect.Descriptor instead.
func (*UserId) Descriptor() ([]byte, []int) {
	return file_progress_proto_rawDescGZIP(), []int{12}
}

func (x *UserId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_progress_proto protoreflect.FileDescriptor

var file_progress_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0x3c, 0x0a, 0x19, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x42, 0x79, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x42, 0x79, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xd4, 0x02, 0x0a, 0x1a,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x42, 0x79, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02,
	0x78, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x78, 0x70, 0x12, 0x2b, 0x0a, 0x11,
	0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x76, 0x6f, 0x63,
	0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x5f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72,
	0x79, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x67, 0x72, 0x61, 0x6d,
	0x6d, 0x61, 0x72, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x67, 0x72, 0x61, 0x6d, 0x6d, 0x61,
	0x72, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x12, 0x37,
	0x0a, 0x17, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6d, 0x70,
	0x72, 0x65, 0x68, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x16, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65,
	0x68, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x70, 0x65, 0x61, 0x6b,
	0x69, 0x6e, 0x67, 0x5f, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x46, 0x6c, 0x75, 0x65, 0x6e,
	0x63, 0x79, 0x22, 0xef, 0x01, 0x0a, 0x15, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x78, 0x70, 0x5f, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x78, 0x70, 0x45, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x12, 0x2b, 0x0a,
	0x11, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x65,
	0x77, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6e, 0x65, 0x77, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x4c,
	0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65,
	0x73, 0x5f, 0x70, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x10, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x50, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x63, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6b, 0x5f, 0x64, 0x61,
	0x79, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6b,
	0x44, 0x61, 0x79, 0x73, 0x22, 0xb3, 0x02, 0x0a, 0x16, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x77, 0x65, 0x65, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x65, 0x65, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x77, 0x65, 0x65, 0x6b, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x77, 0x65, 0x65, 0x6b, 0x45, 0x6e, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x78, 0x70, 0x5f, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x58, 0x70, 0x45, 0x61, 0x72, 0x6e, 0x65,
	0x64, 0x12, 0x2b, 0x0a, 0x11, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x2a,
	0x0a, 0x11, 0x6e, 0x65, 0x77, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x6c, 0x65, 0x61, 0x72,
	0x6e, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6e, 0x65, 0x77, 0x57, 0x6f,
	0x72, 0x64, 0x73, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x70, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x63, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x50, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63,
	0x65, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x6f, 0x73,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x79, 0x22, 0x98, 0x02, 0x0a, 0x17, 0x4d,
	0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x26, 0x0a, 0x0f,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x78, 0x70, 0x5f, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x58, 0x70, 0x45, 0x61,
	0x72, 0x6e, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x5f,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x10, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x65, 0x77, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x6c,
	0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6e, 0x65,
	0x77, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x12, 0x36, 0x0a,
	0x17, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x70,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x50, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x63, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x6d,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x6d, 0x6f, 0x73, 0x74, 0x49, 0x6d, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64,
	0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x22, 0x72, 0x0a, 0x0b, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x22, 0x51, 0x0a, 0x14, 0x41, 0x63, 0x68,
	0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x39, 0x0a, 0x0c, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x2e, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c,
	0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x68, 0x0a, 0x10,
	0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x72, 0x61, 0x6e, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x78, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x78, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x8c, 0x01, 0x0a, 0x13, 0x4c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x6c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x6c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x52, 0x61, 0x6e, 0x6b, 0x22, 0x84, 0x02, 0x0a, 0x05, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x33, 0x0a, 0x16, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x4e, 0x65, 0x78, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x23,
	0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x4c, 0x65, 0x61, 0x72,
	0x6e, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x5f, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x75, 0x6c,
	0x65, 0x73, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f,
	0x6d, 0x70, 0x72, 0x65, 0x68, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x68, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x6c, 0x75,
	0x65, 0x6e, 0x63, 0x79, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x61, 0x74, 0x65, 0x22, 0x55, 0x0a, 0x0e,
	0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x06, 0x73, 0x6b, 0x69,
	0x6c, 0x6c, 0x73, 0x22, 0x18, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x32, 0xc3, 0x04,
	0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x5e, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x42, 0x79, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x42, 0x79,
	0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x42,
	0x79, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5e, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x42, 0x79, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x23, 0x2e,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x42, 0x79, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x4c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x50, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x42, 0x79,
	0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x42, 0x79, 0x4c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x2e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x10, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x57, 0x65, 0x65,
	0x6b, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c,
	0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x21, 0x2e, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x41,
	0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x0b, 0x5a, 0x09, 0x2f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_progress_proto_rawDescOnce sync.Once
	file_progress_proto_rawDescData = file_progress_proto_rawDesc
)

func file_progress_proto_rawDescGZIP() []byte {
	file_progress_proto_rawDescOnce.Do(func() {
		file_progress_proto_rawDescData = protoimpl.X.CompressGZIP(file_progress_proto_rawDescData)
	})
	return file_progress_proto_rawDescData
}

var file_progress_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_progress_proto_goTypes = []any{
	(*ProgressByLanguageRequest)(nil),  // 0: progress.ProgressByLanguageRequest
	(*ProgressByLanguageReq)(nil),      // 1: progress.ProgressByLanguageReq
	(*ProgressByLanguageResponse)(nil), // 2: progress.ProgressByLanguageResponse
	(*DailyProgressResponse)(nil),      // 3: progress.DailyProgressResponse
	(*WeeklyProgressResponse)(nil),     // 4: progress.WeeklyProgressResponse
	(*MonthlyProgressResponse)(nil),    // 5: progress.MonthlyProgressResponse
	(*Achievement)(nil),                // 6: progress.Achievement
	(*AchievementsResponse)(nil),       // 7: progress.AchievementsResponse
	(*LeaderboardEntry)(nil),           // 8: progress.LeaderboardEntry
	(*LeaderboardResponse)(nil),        // 9: progress.LeaderboardResponse
	(*Skill)(nil),                      // 10: progress.Skill
	(*SkillsResponse)(nil),             // 11: progress.SkillsResponse
	(*UserId)(nil),                     // 12: progress.UserId
}
var file_progress_proto_depIdxs = []int32{
	6,  // 0: progress.AchievementsResponse.achievements:type_name -> progress.Achievement
	8,  // 1: progress.LeaderboardResponse.leaderboard:type_name -> progress.LeaderboardEntry
	10, // 2: progress.SkillsResponse.skills:type_name -> progress.Skill
	1,  // 3: progress.ProgressService.GetProgressByLanguage:input_type -> progress.ProgressByLanguageReq
	0,  // 4: progress.ProgressService.GetLeaderboardByLanguage:input_type -> progress.ProgressByLanguageRequest
	1,  // 5: progress.ProgressService.GetSkillsByLanguage:input_type -> progress.ProgressByLanguageReq
	12, // 6: progress.ProgressService.GetDailyProgress:input_type -> progress.UserId
	12, // 7: progress.ProgressService.GetWeeklyProgress:input_type -> progress.UserId
	12, // 8: progress.ProgressService.GetMonthlyProgress:input_type -> progress.UserId
	12, // 9: progress.ProgressService.GetAchievements:input_type -> progress.UserId
	2,  // 10: progress.ProgressService.GetProgressByLanguage:output_type -> progress.ProgressByLanguageResponse
	9,  // 11: progress.ProgressService.GetLeaderboardByLanguage:output_type -> progress.LeaderboardResponse
	11, // 12: progress.ProgressService.GetSkillsByLanguage:output_type -> progress.SkillsResponse
	3,  // 13: progress.ProgressService.GetDailyProgress:output_type -> progress.DailyProgressResponse
	4,  // 14: progress.ProgressService.GetWeeklyProgress:output_type -> progress.WeeklyProgressResponse
	5,  // 15: progress.ProgressService.GetMonthlyProgress:output_type -> progress.MonthlyProgressResponse
	7,  // 16: progress.ProgressService.GetAchievements:output_type -> progress.AchievementsResponse
	10, // [10:17] is the sub-list for method output_type
	3,  // [3:10] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_progress_proto_init() }
func file_progress_proto_init() {
	if File_progress_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_progress_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ProgressByLanguageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progress_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ProgressByLanguageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progress_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ProgressByLanguageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progress_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*DailyProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progress_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*WeeklyProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progress_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*MonthlyProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progress_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*Achievement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progress_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*AchievementsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progress_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*LeaderboardEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progress_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*LeaderboardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progress_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*Skill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progress_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*SkillsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progress_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*UserId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_progress_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_progress_proto_goTypes,
		DependencyIndexes: file_progress_proto_depIdxs,
		MessageInfos:      file_progress_proto_msgTypes,
	}.Build()
	File_progress_proto = out.File
	file_progress_proto_rawDesc = nil
	file_progress_proto_goTypes = nil
	file_progress_proto_depIdxs = nil
}
